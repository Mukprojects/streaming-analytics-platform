groups:
  - name: streaming_pipeline_alerts
    rules:
      # High error rate alert
      - alert: HighErrorRate
        expr: rate(api_requests_total{status=~"5.."}[5m]) > 0.1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value }} errors per second"

      # High processing latency
      - alert: HighProcessingLatency
        expr: histogram_quantile(0.95, rate(processing_latency_seconds_bucket[5m])) > 0.1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High processing latency"
          description: "95th percentile latency is {{ $value }}s"

      # Consumer lag alert
      - alert: HighConsumerLag
        expr: consumer_group_pending > 1000
        for: 3m
        labels:
          severity: warning
        annotations:
          summary: "High consumer group lag"
          description: "Consumer group has {{ $value }} pending messages"

      # Anomaly detection alert
      - alert: AnomalyDetected
        expr: rate(anomaly_score_bucket{le="0.8"}[5m]) < rate(anomaly_score_count[5m]) * 0.9
        for: 2m
        labels:
          severity: warning
        annotations:
          summary: "Anomalies detected in event stream"
          description: "High anomaly scores detected in recent events"

      # Service down alert
      - alert: ServiceDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Service is down"
          description: "{{ $labels.job }} service is not responding"

      # Redis cluster issues
      - alert: RedisClusterIssue
        expr: redis_connected_clients < 1
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "Redis cluster connectivity issues"
          description: "Redis cluster may be experiencing connectivity problems"

      # Chaos experiment failure
      - alert: ChaosExperimentFailed
        expr: increase(chaos_experiments_total[10m]) > 0 and increase(service_failures_induced[10m]) == 0
        for: 1m
        labels:
          severity: info
        annotations:
          summary: "Chaos experiments running but no failures induced"
          description: "Chaos monkey may not be working properly"